# Kubernetes deployment for VisLang-UltraLow-Resource
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vislang-app
  labels:
    app: vislang
    version: v1.0.0
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: vislang
  template:
    metadata:
      labels:
        app: vislang
        version: v1.0.0
    spec:
      containers:
      - name: vislang-app
        image: terragonlabs/vislang-ultralow:latest
        ports:
        - containerPort: 8000
          name: http
        - containerPort: 8080
          name: metrics
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: vislang-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: vislang-secrets
              key: redis-url
        - name: PYTHONPATH
          value: "/app/src"
        - name: LOG_LEVEL
          value: "INFO"
        - name: METRICS_ENABLED
          value: "true"
        resources:
          requests:
            memory: "2Gi"
            cpu: "1000m"
          limits:
            memory: "8Gi"
            cpu: "4000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: cache-volume
          mountPath: /app/cache
        - name: models-volume
          mountPath: /app/models
        - name: config-volume
          mountPath: /app/config
          readOnly: true
      volumes:
      - name: cache-volume
        emptyDir:
          sizeLimit: 10Gi
      - name: models-volume
        persistentVolumeClaim:
          claimName: vislang-models-pvc
      - name: config-volume
        configMap:
          name: vislang-config
      nodeSelector:
        node-type: compute-optimized
      tolerations:
      - key: "ai-workload"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - vislang
              topologyKey: kubernetes.io/hostname

---
apiVersion: v1
kind: Service
metadata:
  name: vislang-service
  labels:
    app: vislang
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8000
    protocol: TCP
    name: http
  - port: 8080
    targetPort: 8080
    protocol: TCP
    name: metrics
  selector:
    app: vislang

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: vislang-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
spec:
  tls:
  - hosts:
    - api.vislang.terragonlabs.ai
    secretName: vislang-tls
  rules:
  - host: api.vislang.terragonlabs.ai
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: vislang-service
            port:
              number: 80

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: vislang-models-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi
  storageClassName: fast-ssd

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: vislang-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: vislang-app
  minReplicas: 3
  maxReplicas: 20
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: vislang-config
data:
  app.yaml: |
    app:
      name: VisLang-UltraLow-Resource
      version: "1.0.0"
      debug: false
    
    database:
      pool_size: 20
      max_overflow: 10
      pool_timeout: 30
      pool_recycle: 3600
    
    cache:
      default_ttl: 3600
      max_size: 1000
    
    processing:
      max_workers: 8
      batch_size: 32
      timeout: 300
    
    languages:
      default: "en"
      supported:
        - "en"
        - "fr" 
        - "es"
        - "ar"
        - "sw"
        - "am"
        - "ha"
    
    ocr:
      engines:
        - "tesseract"
        - "easyocr"
      confidence_threshold: 0.7
    
    quality:
      min_score: 0.8
      validation_enabled: true
    
    monitoring:
      metrics_enabled: true
      health_check_interval: 30
      performance_monitoring: true

---
apiVersion: v1
kind: Secret
metadata:
  name: vislang-secrets
type: Opaque
stringData:
  database-url: "postgresql://username:password@postgres-service:5432/vislang"
  redis-url: "redis://redis-service:6379/0"
  api-key: "your-api-key-here"
  jwt-secret: "your-jwt-secret-here"

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: vislang-pdb
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: vislang

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vislang-service-account
automountServiceAccountToken: false

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: vislang-network-policy
spec:
  podSelector:
    matchLabels:
      app: vislang
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-system
    ports:
    - protocol: TCP
      port: 8000
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 8080
  egress:
  - to: []
    ports:
    - protocol: TCP
      port: 5432  # PostgreSQL
    - protocol: TCP
      port: 6379  # Redis
    - protocol: TCP
      port: 80   # HTTP
    - protocol: TCP
      port: 443  # HTTPS
    - protocol: UDP
      port: 53   # DNS